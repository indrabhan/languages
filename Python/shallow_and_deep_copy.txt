shallow copy:
	here object reference is pass.
	li1 = [1,2,3]
	li2 = [4,5,6]
	
	li1 = li2  	o/p:- [4,5,6]  li2 object reference is pass to li1 (means li1 and li2 have the same object )
	
	print (id(li1))		id() method is used to get the object reference
	print (id(li2))		both print will have the same oject reference number
	
	li1.append(0)	o/p:- [4,5,6,0]
	print (li2)	o/p:- [4,5,6,0]
	
		Using copy method
		
		import copy
	
		li1 = [1, 2, [3,5], 4]
		li2 = copy.copy(li1)
		
		print (li1)	[1, 2, [3,5], 4]
		print (li2)	[1, 2, [3,5], 4]
		
		li2[2][0] = 7
		
		print (li1)	o/p:- [1, 2, [7, 5], 4]	here we make change in li2 and it also changed in li1, meansobj ref is pass,
		print (li2)	o/p:- [1, 2, [7, 5], 4]	this is know as shallow copy
	
	
deep copy:
	old list and new list will be different after you add the elemet in new list else they will be same
	
	
		import copy
		
		li1 = [1, 2, [3,5], 4]
		
		li2 = copy.deepcopy(li1)
		
		print (li1)		o/p:- [1, 2, [3,5], 4]
		print (li2)		o/p:- [1, 2, [3,5], 4]
		
		
		li2[2][0] = 10
		
		print (li1)	o/p:- [1, 2, [3, 5], 4]	here we make change in li2 and it does not change the li1.
		print (li2)	o/p:- [1, 2, [10, 5], 4]	
